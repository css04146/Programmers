import java.util.Map;
import java.util.List;
import java.util.Arrays;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.Collections;
class Solution {
    Map<String, Integer> hm = new HashMap<>();
    public String[] solution(String[] orders, int[] course) {
        for(String order : orders){
            char[] temp = order.toCharArray();
            Arrays.sort(temp);
            makeMenu(temp, 0, "", course);
        }
        List<List<String>> list = new ArrayList<>();
        for(int c : course){
            int max = Integer.MIN_VALUE;
            list.add(new ArrayList<>());
            for(String key : hm.keySet()){
                if(c == key.length()){
                    if(hm.get(key) < 2) continue;
                    if(hm.get(key) > max){
                        max = hm.get(key);
                        list.remove(list.size() - 1);
                        List<String> temp = new ArrayList<>();
                        temp.add(key);
                        list.add(temp);
                    }
                    else if(hm.get(key) == max){
                        List<String> temp = list.get(list.size() - 1);
                        temp.add(key);
                    }
                }
            }
        }
        List<String> answer = new ArrayList<>();
        for(List l : list){
            for(int i = 0; i < l.size(); i++){
                String temp = String.valueOf(l.get(i));
                answer.add(temp);
            }
        }
        Collections.sort(answer);
        return answer.toArray(new String[0]);
    }
    public void makeMenu(char[] temp, int idx, String menu, int[] course){
        for(int c : course){
            if(c == menu.length()){
                hm.put(menu, hm.getOrDefault(menu, 0) + 1);
            }
        }
        for(int i = idx; i < temp.length; i++){
            makeMenu(temp, i + 1, menu + temp[i], course);
        }
    }
}
